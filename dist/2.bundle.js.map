{"version":3,"sources":["webpack:///./js/undoredo.js"],"names":["UndoRedo","e","canvas","Elements","Undo","length","forEach","element","push","i","upperCanvas","ctx","clearRect","width","height","strokeRect","x","y","Redo","pop","shift"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;;IAEqBA,Q;;;;;;;;;+BACDC,C,EAAGC,M,EAAQC,Q,EAAS;AACpCC,mDAAI,CAACC,MAAL,GAAc,CAAd;AACAF,cAAQ,CAACG,OAAT,CAAiB,UAACC,OAAD,EAAa;AAC5BH,qDAAI,CAACI,IAAL,CAAUD,OAAV;AACD,OAFD;AAGD;;;+BAEiBN,C,EAAGC,M,EAAO;AAC1B,UAAIO,CAAC,GAAG,CAAR;AACAP,YAAM,CAACQ,WAAP,CAAmBC,GAAnB,CAAuBC,SAAvB,CAAiC,CAAjC,EAAoC,CAApC,EAAuCV,MAAM,CAACQ,WAAP,CAAmBG,KAA1D,EAAiEX,MAAM,CAACQ,WAAP,CAAmBI,MAApF;;AACA,WAAKL,CAAL,EAAQA,CAAC,GAAGL,6CAAI,CAACC,MAAL,GAAc,CAA1B,EAA6BI,CAAC,EAA9B,EAAkC;AAChCP,cAAM,CAACQ,WAAP,CAAmBC,GAAnB,CAAuBI,UAAvB,CAAkCX,6CAAI,CAACK,CAAD,CAAJ,CAAQO,CAA1C,EAA6CZ,6CAAI,CAACK,CAAD,CAAJ,CAAQQ,CAArD,EAAwDb,6CAAI,CAACK,CAAD,CAAJ,CAAQI,KAAhE,EAAuET,6CAAI,CAACK,CAAD,CAAJ,CAAQK,MAA/E;AACD;;AACDI,mDAAI,CAACV,IAAL,CAAUJ,6CAAI,CAACA,6CAAI,CAACC,MAAL,GAAc,CAAf,CAAd;AACAD,mDAAI,CAACe,GAAL;AACAhB,uDAAQ,CAACE,MAAT,GAAkB,CAAlB;AACAD,mDAAI,CAACE,OAAL,CAAa,UAACC,OAAD,EAAa;AACxBJ,yDAAQ,CAACK,IAAT,CAAcD,OAAd;AACD,OAFD;AAGD;;;+BAEiBN,C,EAAGC,M,EAAO;AAC1B,UAAIK,OAAO,GAAGW,6CAAI,CAACE,KAAL,EAAd;AACAlB,YAAM,CAACQ,WAAP,CAAmBC,GAAnB,CAAuBI,UAAvB,CAAkCR,OAAO,CAACS,CAA1C,EAA6CT,OAAO,CAACU,CAArD,EAAwDV,OAAO,CAACM,KAAhE,EAAuEN,OAAO,CAACO,MAA/E;AACD","file":"2.bundle.js","sourcesContent":["import { Undo, Redo } from './globals';\r\nimport { Elements } from './element';\r\n\r\nexport default class UndoRedo {\r\n  static recordUndo(e, canvas, Elements){\r\n    Undo.length = 0;\r\n    Elements.forEach((element) => {\r\n      Undo.push(element);\r\n    });\r\n  }\r\n\r\n  static canvasUndo(e, canvas){\r\n    let i = 0;\r\n    canvas.upperCanvas.ctx.clearRect(0, 0, canvas.upperCanvas.width, canvas.upperCanvas.height);\r\n    for (i; i < Undo.length - 1; i++) {\r\n      canvas.upperCanvas.ctx.strokeRect(Undo[i].x, Undo[i].y, Undo[i].width, Undo[i].height);\r\n    }\r\n    Redo.push(Undo[Undo.length - 1]);\r\n    Undo.pop();\r\n    Elements.length = 0;\r\n    Undo.forEach((element) => {\r\n      Elements.push(element);\r\n    })\r\n  }\r\n\r\n  static canvasRedo(e, canvas){\r\n    let element = Redo.shift();\r\n    canvas.upperCanvas.ctx.strokeRect(element.x, element.y, element.width, element.height);\r\n  }\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./js/undoredo.js"],"names":["Undoredo","e","canvas","i","ctx","clearRect","width","height","UNDO","length","strokeRect","x","y","REDO","unshift","pop","Elements","forEach","element","push","shift","undefined","Tool","recordUndo"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;IAEqBA,Q;;;;;;;;;+BACDC,C,EAAGC,M,EAAQ;AAC3B,UAAIC,CAAC,GAAG,CAAR;AACAD,YAAM,CAACA,MAAP,CAAcE,GAAd,CAAkBC,SAAlB,CAA4B,CAA5B,EAA+B,CAA/B,EAAkCH,MAAM,CAACA,MAAP,CAAcI,KAAhD,EAAuDJ,MAAM,CAACA,MAAP,CAAcK,MAArE;;AACA,WAAKJ,CAAL,EAAQA,CAAC,GAAGK,6CAAI,CAACC,MAAL,GAAc,CAA1B,EAA6BN,CAAC,EAA9B,EAAkC;AAChCD,cAAM,CAACA,MAAP,CAAcE,GAAd,CAAkBM,UAAlB,CAA6BF,6CAAI,CAACL,CAAD,CAAJ,CAAQQ,CAArC,EAAwCH,6CAAI,CAACL,CAAD,CAAJ,CAAQS,CAAhD,EAAmDJ,6CAAI,CAACL,CAAD,CAAJ,CAAQG,KAA3D,EAAkEE,6CAAI,CAACL,CAAD,CAAJ,CAAQI,MAA1E;AACD;;AACDM,mDAAI,CAACC,OAAL,CAAaN,6CAAI,CAACA,6CAAI,CAACC,MAAL,GAAc,CAAf,CAAjB;AACAD,mDAAI,CAACO,GAAL;AACAC,uDAAQ,CAACP,MAAT,GAAkB,CAAlB;AACAD,mDAAI,CAACS,OAAL,CAAa,UAACC,OAAD,EAAa;AACxBF,yDAAQ,CAACG,IAAT,CAAcD,OAAd;AACD,OAFD;AAGD;;;+BAEiBjB,C,EAAGC,M,EAAQ;AAC3B,UAAMgB,OAAO,GAAGL,6CAAI,CAACO,KAAL,EAAhB;;AACA,UAAIF,OAAO,KAAKG,SAAhB,EAA2B;AACzBnB,cAAM,CAACA,MAAP,CAAcE,GAAd,CAAkBM,UAAlB,CAA6BQ,OAAO,CAACP,CAArC,EAAwCO,OAAO,CAACN,CAAhD,EAAmDM,OAAO,CAACZ,KAA3D,EAAkEY,OAAO,CAACX,MAA1E;AACAS,yDAAQ,CAACG,IAAT,CAAcD,OAAd;AACD;;AACDI,iDAAI,CAACC,UAAL;AACD","file":"2.bundle.js","sourcesContent":["import { UNDO, REDO } from './globals';\r\nimport { Elements } from './element';\r\nimport { Tool } from './tools';\r\n\r\nexport default class Undoredo {\r\n  static canvasUndo(e, canvas) {\r\n    let i = 0;\r\n    canvas.canvas.ctx.clearRect(0, 0, canvas.canvas.width, canvas.canvas.height);\r\n    for (i; i < UNDO.length - 1; i++) {\r\n      canvas.canvas.ctx.strokeRect(UNDO[i].x, UNDO[i].y, UNDO[i].width, UNDO[i].height);\r\n    }\r\n    REDO.unshift(UNDO[UNDO.length - 1]);\r\n    UNDO.pop();\r\n    Elements.length = 0;\r\n    UNDO.forEach((element) => {\r\n      Elements.push(element);\r\n    });\r\n  }\r\n\r\n  static canvasRedo(e, canvas) {\r\n    const element = REDO.shift();\r\n    if (element !== undefined) {\r\n      canvas.canvas.ctx.strokeRect(element.x, element.y, element.width, element.height);\r\n      Elements.push(element);\r\n    }\r\n    Tool.recordUndo();\r\n  }\r\n}\r\n"],"sourceRoot":""}
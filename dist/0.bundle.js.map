{"version":3,"sources":["webpack:///./js/ch.js"],"names":["Shape","x","y","w","h","fill","prototype","draw","ctx","fillStyle","fillRect","contains","mx","my","CanvasState","canvas","width","height","getContext","stylePaddingLeft","stylePaddingTop","styleBorderLeft","styleBorderTop","document","defaultView","getComputedStyle","parseInt","html","body","parentNode","htmlTop","offsetTop","htmlLeft","offsetLeft","valid","shapes","dragging","selection","dragoffx","dragoffy","myState","addEventListener","e","preventDefault","mouse","getMouse","l","length","i","mySel","addShape","selectionColor","selectionWidth","interval","setInterval","shape","push","clear","clearRect","strokeStyle","lineWidth","strokeRect","element","offsetX","offsetY","offsetParent","undefined","pageX","pageY","init","s","getElementById"],"mappings":"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","file":"0.bundle.js","sourcesContent":["// By Simon Sarris\r\n// www.simonsarris.com\r\n// sarris@acm.org\r\n//\r\n// Last update December 2011\r\n//\r\n// Free to use and distribute at will\r\n// So long as you are nice to people, etc\r\n\r\n// Constructor for Shape objects to hold data for all drawn objects.\r\n// For now they will just be defined as rectangles.\r\nfunction Shape(x, y, w, h, fill) {\r\n  // This is a very simple and unsafe constructor. All we're doing is checking if the values exist.\r\n  // \"x || 0\" just means \"if there is a value for x, use that. Otherwise use 0.\"\r\n  // But we aren't checking anything else! We could put \"Lalala\" for the value of x \r\n  this.x = x || 0;\r\n  this.y = y || 0;\r\n  this.w = w || 1;\r\n  this.h = h || 1;\r\n  this.fill = fill || '#AAAAAA';\r\n}\r\n\r\n// Draws this shape to a given context\r\nShape.prototype.draw = function(ctx) {\r\n  ctx.fillStyle = this.fill;\r\n  ctx.fillRect(this.x, this.y, this.w, this.h);\r\n}\r\n\r\n// Determine if a point is inside the shape's bounds\r\nShape.prototype.contains = function(mx, my) {\r\n  // All we have to do is make sure the Mouse X,Y fall in the area between\r\n  // the shape's X and (X + Width) and its Y and (Y + Height)\r\n  return  (this.x <= mx) && (this.x + this.w >= mx) &&\r\n    (this.y <= my) && (this.y + this.h >= my);\r\n}\r\n\r\nfunction CanvasState(canvas) {\r\n  // **** First some setup! ****\r\n\r\n  this.canvas = canvas;\r\n  this.width = canvas.width;\r\n  this.height = canvas.height;\r\n  this.ctx = canvas.getContext('2d');\r\n  // This complicates things a little but but fixes mouse co-ordinate problems\r\n  // when there's a border or padding. See getMouse for more detail\r\n  var stylePaddingLeft, stylePaddingTop, styleBorderLeft, styleBorderTop;\r\n  if (document.defaultView && document.defaultView.getComputedStyle) {\r\n    this.stylePaddingLeft = parseInt(document.defaultView.getComputedStyle(canvas, null)['paddingLeft'], 10)      || 0;\r\n    this.stylePaddingTop  = parseInt(document.defaultView.getComputedStyle(canvas, null)['paddingTop'], 10)       || 0;\r\n    this.styleBorderLeft  = parseInt(document.defaultView.getComputedStyle(canvas, null)['borderLeftWidth'], 10)  || 0;\r\n    this.styleBorderTop   = parseInt(document.defaultView.getComputedStyle(canvas, null)['borderTopWidth'], 10)   || 0;\r\n  }\r\n  // Some pages have fixed-position bars (like the stumbleupon bar) at the top or left of the page\r\n  // They will mess up mouse coordinates and this fixes that\r\n  var html = document.body.parentNode;\r\n  this.htmlTop = html.offsetTop;\r\n  this.htmlLeft = html.offsetLeft;\r\n\r\n  // **** Keep track of state! ****\r\n\r\n  this.valid = false; // when set to false, the canvas will redraw everything\r\n  this.shapes = [];  // the collection of things to be drawn\r\n  this.dragging = false; // Keep track of when we are dragging\r\n  // the current selected object. In the future we could turn this into an array for multiple selection\r\n  this.selection = null;\r\n  this.dragoffx = 0; // See mousedown and mousemove events for explanation\r\n  this.dragoffy = 0;\r\n\r\n  // **** Then events! ****\r\n\r\n  // This is an example of a closure!\r\n  // Right here \"this\" means the CanvasState. But we are making events on the Canvas itself,\r\n  // and when the events are fired on the canvas the variable \"this\" is going to mean the canvas!\r\n  // Since we still want to use this particular CanvasState in the events we have to save a reference to it.\r\n  // This is our reference!\r\n  var myState = this;\r\n\r\n  //fixes a problem where double clicking causes text to get selected on the canvas\r\n  canvas.addEventListener('selectstart', function(e) { e.preventDefault(); return false; }, false);\r\n  // Up, down, and move are for dragging\r\n  canvas.addEventListener('mousedown', function(e) {\r\n    var mouse = myState.getMouse(e);\r\n    var mx = mouse.x;\r\n    var my = mouse.y;\r\n    var shapes = myState.shapes;\r\n    var l = shapes.length;\r\n    for (var i = l-1; i >= 0; i--) {\r\n      if (shapes[i].contains(mx, my)) {\r\n        var mySel = shapes[i];\r\n        // Keep track of where in the object we clicked\r\n        // so we can move it smoothly (see mousemove)\r\n        myState.dragoffx = mx - mySel.x;\r\n        myState.dragoffy = my - mySel.y;\r\n        myState.dragging = true;\r\n        myState.selection = mySel;\r\n        myState.valid = false;\r\n        return;\r\n      }\r\n    }\r\n    // havent returned means we have failed to select anything.\r\n    // If there was an object selected, we deselect it\r\n    if (myState.selection) {\r\n      myState.selection = null;\r\n      myState.valid = false; // Need to clear the old selection border\r\n    }\r\n  }, true);\r\n  canvas.addEventListener('mousemove', (e) => {\r\n    if (myState.dragging){\r\n      var mouse = myState.getMouse(e);\r\n      // We don't want to drag the object by its top-left corner, we want to drag it\r\n      // from where we clicked. Thats why we saved the offset and use it here\r\n      myState.selection.x = mouse.x - myState.dragoffx;\r\n      myState.selection.y = mouse.y - myState.dragoffy;\r\n      myState.valid = false; // Something's dragging so we must redraw\r\n    }\r\n  }, true);\r\n  canvas.addEventListener('mouseup', function(e) {\r\n    myState.dragging = false;\r\n  }, true);\r\n  // double click for making new shapes\r\n  canvas.addEventListener('dblclick', function(e) {\r\n    var mouse = myState.getMouse(e);\r\n    myState.addShape(new Shape(mouse.x - 10, mouse.y - 10, 20, 20, 'rgba(0,255,0,.6)'));\r\n  }, true);\r\n\r\n  // **** Options! ****\r\n\r\n  this.selectionColor = '#CC0000';\r\n  this.selectionWidth = 2;\r\n  this.interval = 30;\r\n  setInterval(function() { myState.draw(); }, myState.interval);\r\n}\r\n\r\nCanvasState.prototype.addShape = function(shape) {\r\n  this.shapes.push(shape);\r\n  this.valid = false;\r\n}\r\n\r\nCanvasState.prototype.clear = function() {\r\n  this.ctx.clearRect(0, 0, this.width, this.height);\r\n}\r\n\r\n// While draw is called as often as the INTERVAL variable demands,\r\n// It only ever does something if the canvas gets invalidated by our code\r\nCanvasState.prototype.draw = function() {\r\n  // if our state is invalid, redraw and validate!\r\n  if (!this.valid) {\r\n    var ctx = this.ctx;\r\n    var shapes = this.shapes;\r\n    this.clear();\r\n\r\n    // ** Add stuff you want drawn in the background all the time here **\r\n\r\n    // draw all shapes\r\n    var l = shapes.length;\r\n    for (var i = 0; i < l; i++) {\r\n      var shape = shapes[i];\r\n      // We can skip the drawing of elements that have moved off the screen:\r\n      if (shape.x > this.width || shape.y > this.height ||\r\n        shape.x + shape.w < 0 || shape.y + shape.h < 0) continue;\r\n      shapes[i].draw(ctx);\r\n    }\r\n\r\n    // draw selection\r\n    // right now this is just a stroke along the edge of the selected Shape\r\n    if (this.selection != null) {\r\n      ctx.strokeStyle = this.selectionColor;\r\n      ctx.lineWidth = this.selectionWidth;\r\n      var mySel = this.selection;\r\n      ctx.strokeRect(mySel.x,mySel.y,mySel.w,mySel.h);\r\n    }\r\n\r\n    // ** Add stuff you want drawn on top all the time here **\r\n\r\n    this.valid = true;\r\n  }\r\n}\r\n\r\n\r\n// Creates an object with x and y defined, set to the mouse position relative to the state's canvas\r\n// If you wanna be super-correct this can be tricky, we have to worry about padding and borders\r\nCanvasState.prototype.getMouse = function(e) {\r\n  var element = this.canvas, offsetX = 0, offsetY = 0, mx, my;\r\n\r\n  // Compute the total offset\r\n  if (element.offsetParent !== undefined) {\r\n    do {\r\n      offsetX += element.offsetLeft;\r\n      offsetY += element.offsetTop;\r\n    } while ((element = element.offsetParent));\r\n  }\r\n\r\n  // Add padding and border style widths to offset\r\n  // Also add the <html> offsets in case there's a position:fixed bar\r\n  offsetX += this.stylePaddingLeft + this.styleBorderLeft + this.htmlLeft;\r\n  offsetY += this.stylePaddingTop + this.styleBorderTop + this.htmlTop;\r\n\r\n  mx = e.pageX - offsetX;\r\n  my = e.pageY - offsetY;\r\n\r\n  // We return a simple javascript object (a hash) with x and y defined\r\n  return {x: mx, y: my};\r\n}\r\n\r\n// If you dont want to use <body onLoad='init()'>\r\n// You could uncomment this init() reference and place the script reference inside the body tag\r\n//init();\r\n\r\nfunction init() {\r\n  var s = new CanvasState(document.getElementById('canvas1'));\r\n  s.addShape(new Shape(40,40,50,50)); // The default is gray\r\n  s.addShape(new Shape(60,140,40,60, 'lightskyblue'));\r\n  // Lets make some partially transparent\r\n  s.addShape(new Shape(80,150,60,30, 'rgba(127, 255, 212, .5)'));\r\n  s.addShape(new Shape(125,80,30,80, 'rgba(245, 222, 179, .7)'));\r\n}\r\n"],"sourceRoot":""}